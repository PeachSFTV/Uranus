# Simplified workflow for testing
name: Validate Build System

on:
  workflow_dispatch:  # Manual trigger only for testing
  
env:
  PYTHON_VERSION: '3.12'

jobs:
  validate-linux:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Validate pyiec61850 Import
      run: |
        # Test if pyiec61850 can be imported after build
        python -c "
        try:
            import pyiec61850
            print('‚úÖ pyiec61850 module structure is valid')
        except ImportError as e:
            print(f'‚ö†Ô∏è  pyiec61850 not available yet (expected): {e}')
        "
    
    - name: Validate Project Structure
      run: |
        echo "üîç Checking project structure..."
        
        # Check entry point
        if [ -f "code/MainWindow_Page.py" ]; then
          echo "‚úÖ Entry point found: code/MainWindow_Page.py"
        else
          echo "‚ùå Entry point missing: code/MainWindow_Page.py"
          exit 1
        fi
        
        # Check spec file
        if [ -f "uranus.spec" ]; then
          echo "‚úÖ PyInstaller spec found: uranus.spec"
        else
          echo "‚ùå PyInstaller spec missing: uranus.spec"
          exit 1
        fi
        
        # Check requirements
        if [ -f "requirements.txt" ]; then
          echo "‚úÖ Requirements found: requirements.txt"
          echo "üìã Dependencies:"
          head -10 requirements.txt
        else
          echo "‚ùå Requirements missing: requirements.txt"
          exit 1
        fi
        
        # Check directories
        for dir in QTDesigner upload_file icon code/iec61850_system; do
          if [ -d "$dir" ]; then
            echo "‚úÖ Directory found: $dir"
          else
            echo "‚ö†Ô∏è  Directory missing: $dir"
          fi
        done
    
    - name: Test Requirements Installation
      run: |
        echo "üì¶ Testing requirements installation..."
        pip install --dry-run -r requirements.txt
        echo "‚úÖ Requirements validation passed"
    
    - name: Validate uranus.spec Syntax
      run: |
        echo "üîç Validating uranus.spec syntax..."
        python -c "
        import ast
        try:
            with open('uranus.spec', 'r') as f:
                content = f.read()
            # Basic syntax check
            compile(content, 'uranus.spec', 'exec')
            print('‚úÖ uranus.spec syntax is valid')
        except SyntaxError as e:
            print(f'‚ùå uranus.spec syntax error: {e}')
            exit(1)
        except Exception as e:
            print(f'‚ö†Ô∏è  uranus.spec validation warning: {e}')
        "
    
    - name: Summary
      run: |
        echo "üìã Validation Summary:"
        echo "  ‚úÖ Project structure valid"
        echo "  ‚úÖ Python syntax valid"
        echo "  ‚úÖ Requirements installable"
        echo "  ‚úÖ Ready for full build"