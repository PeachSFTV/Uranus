import faulthandler
faulthandler.enable()

from PyQt6.QtWidgets import QWidget, QFileDialog, QMessageBox
from ui_helper import load_ui_safe, UIHelper
from PyQt6.QtCore import QTimer
import os
import shutil
from pathlib import Path
from resource_helper import get_ui_path

class UploadFilePage(QWidget):
    """‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå SCL ( .scd / .cid / .xml )
    - ‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á  `upload_file/before_convert/`
    - ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å  `scl_parser.SCLParser`  ‡πÄ‡∏û‡∏∑‡πà‡∏≠
        1. ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON  (‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô  upload_file/after_convert/  ‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
        2. ‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå .cid ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏° IED ‡πÑ‡∏õ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô  upload_file/after_convert/<basename>/
    """

    def __init__(self, back_to_main_ui):
        super().__init__()
        from PyQt6 import uic
        ui_file = get_ui_path('Publisher_Page.ui')
        uic.loadUi(ui_file, self)

        self.back_button_pressed = back_to_main_ui
        self.uploadfile_button = self.findChild(QWidget, 'uploadfile_button')
        self.back_button = self.findChild(QWidget, 'back_button')

        self.back_button.clicked.connect(self.back_to_main)
        self.uploadfile_button.clicked.connect(self.upload_file)

    # ------------------------------------------------------------
    def back_to_main(self):
        """‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö"""
        QTimer.singleShot(100, self.back_button_pressed)

    # ------------------------------------------------------------
    @staticmethod
    def _generate_renamed_filename(path: str) -> str:
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö (_1, _2 ‚Ä¶) ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡πâ‡∏≥"""
        base, ext = os.path.splitext(path)
        counter = 1
        new_path = f"{base}_{counter}{ext}"
        while os.path.exists(new_path):
            counter += 1
            new_path = f"{base}_{counter}{ext}"
        return new_path

    # ------------------------------------------------------------
    def upload_file(self):
        file_paths, _ = QFileDialog.getOpenFileNames(
            self,
            "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå SCL ‡∏´‡∏•‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå",
            "",
            "SCL Files (*.scd *.xml *.cid *.BAK);;All Files (*)"
        )

        if not file_paths:
            return

        # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå (‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô  Uranus/code/ )
        base_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
        before_dir = os.path.join(base_dir, 'upload_file', 'before_convert')
        after_dir  = os.path.join(base_dir, 'upload_file', 'after_convert')
        os.makedirs(before_dir, exist_ok=True)
        os.makedirs(after_dir,  exist_ok=True)

        from scl_parser import SCLParser  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ UI

        for file_path in file_paths:
            try:
                file_name = os.path.basename(file_path)
                dest_path = os.path.join(before_dir, file_name)

                # ------------------------------------------------ check duplicate
                if os.path.exists(dest_path):
                    msg = QMessageBox(self)
                    msg.setWindowTitle("‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡πâ‡∏≥")
                    msg.setText(f"‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏∑‡πà‡∏≠ '{file_name}' ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?")
                    overwrite_btn = msg.addButton("Overwrite", QMessageBox.ButtonRole.YesRole)
                    skip_btn      = msg.addButton("Skip",      QMessageBox.ButtonRole.NoRole)
                    rename_btn    = msg.addButton("Rename",    QMessageBox.ButtonRole.ApplyRole)
                    msg.setDefaultButton(overwrite_btn)
                    msg.exec()

                    if msg.clickedButton() == skip_btn:
                        print(f"‚õî ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏ü‡∏•‡πå: {file_name}")
                        continue
                    elif msg.clickedButton() == rename_btn:
                        dest_path = self._generate_renamed_filename(dest_path)
                        file_name = os.path.basename(dest_path)
                        print(f"‚úèÔ∏è ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô: {file_name}")

                shutil.copy(file_path, dest_path)
                print(f"üì¶ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å: {file_name}")

                # --------------------------------------------- ‡πÅ‡∏õ‡∏•‡∏á + ‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå
                json_path = os.path.join(after_dir, os.path.splitext(file_name)[0] + '.json')

                parser = SCLParser(dest_path)
                parser.split_into_ied_json()          # ‚Üê ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ó‡∏≠‡∏î‡πÉ‡∏´‡∏°‡πà



            except Exception as e:
                print(f"‚ùå ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå {file_path}: {e}")

        print("‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")

        QMessageBox.information(
            self,
            "Upload Complete",
            "Upload success",
            QMessageBox.StandardButton.Ok
        )